#include <DHT.h>
#include <DHT_U.h>
#include <DS1302.h> // Librairie du module RTC
//#include "DHT.h"   // Librairie des capteurs DHT
#define DHTPIN 2   // pin sur lequel est branché le DHT le capteur 
#define DHTTYPE DHT11       // DHT 11  (AM2302)
#include <Servo.h>  // Librairie pour le servomoteur


//Time
// Init the DS1302
DS1302 rtc(11,12,13); //rst,data,clk
Time t;

//Servomoteur
Servo monServomoteur;
int Laser = 8;
int Detector = 9;

//Premiere fonction :
float poids;
String genre;  // M pour male et F pour femelle
int age;
String espece; // 1 = Pogona Vitticeps / 2 = Caméléon casque du Yémen / 3 = gecko léopard
byte SerialOK = 0;

//Deuxieme fonction :
DHT dht(DHTPIN, DHTTYPE); 
float temp;
float tempMax;  // point chaud
float tempMin;  // point froid
float tempN;  // temp de nuit
float h;
float humMax;   // humidite minimale
float humMin;   // humidite maximale
float lumiere;   // cycle lumineux (nombre d'heures de lumieres)

const int plaque = 3;      // relai pour la plaque chauffante => temperature => 12V
const int eclairage = 4;   // relai pour la eclairage de LED => 12V
const int radiateur = 5;   // relai pour le radiateur => humidite => 12V
const int pompe = 6;       // relai pour la pompe => 12V
const int brumisateur = 7; // relai pour le brumisateur => humidite => 24V

void setup() {
  Serial.begin(9600);
  rtc.halt(false);
  rtc.writeProtect(false);
  rtc.setTime(8,00,00);

// Caracteristiqures physique du reptile
//________________________________________________________________________________________________________

// PROBLEME serial.read ne prend qu'un seul caractere a la fois
// pas un probleme pour l'age car longetivite du 1) : 5 à 10 ans; du 2) : 3 a 5 ans;
// pour le 3 oui, longetivite +15ans

//// => setting for age : 
  Serial.println("Veuillez saisir l'age du reptile");
  while(SerialOK == 0) { 
    if (Serial.available()) {
      delay(5);    
      int var = Serial.read();
//    if(var == nombre entier) {
      age = var - 48;
      Serial.print("age = ");          // unecessary
      Serial.println(age);             // unecessary
//     }  
//      else {
//         Serial.println(" Erreure en rentrant l'age! ");
//      }
    SerialOK += 1;
    }
  }
  
  SerialOK = 0;
  
// => setting for weight : 
  Serial.println("Veuillez saisir le poids du reptile");
  while(SerialOK == 0) { 
    if (Serial.available() > 0) {
      delay(5);    
      float var = Serial.read();
//      if(var == nombre entier) {
       poids = var - 48;
       Serial.print("poids = ");          // unecessary
       Serial.println(poids);             // unecessary
//     }  
//      else {
//         Serial.println(" Erreure en rentrant le poids! ");
//      }
    SerialOK += 1;
    }
  }

  SerialOK = 0;

// => setting gender  
  Serial.println("Veuillez saisir le genre du reptile");
  while(SerialOK == 0) {
    if (Serial.available() > 0) {
      delay(5);
      int c = Serial.read();
      if ((c == 'M') || (c == 'm')) {
        genre = "Male";
        Serial.println(genre);   // unecessary
        SerialOK += 1;         
       }
       else if ((c == 'F') || (c == 'f')) {
        genre = "Femelle";
        Serial.println(genre);  // unecessary
        SerialOK += 1; 
       }
       else {
        Serial.println("Erreure en rentrant le genre!");
       }
    }
  }

  SerialOK = 0;

// => setting specie : 1 = Pogona Vitticeps / 2 = Caméléon casque du Yémen / 3 = gecko léopard 
  Serial.println("Veuillez saisir l'espece du reptile");
  int num = 0;
  while(SerialOK == 0) {
    if (Serial.available() > 0) {
      delay(5);
      num = Serial.read();
      if (num == '1') {
        espece = "Pogona Vitticeps";
        Serial.println(espece);   // unecessary
       }
       else if (num == '2') {
        espece = "Caméléon casque du Yémen";
        Serial.println(espece);  // unecessary
       }
       else if (num == '3'){
        espece = "Gecko Léopard";
        Serial.println(espece);  // unecessary
       }
       else {
        Serial.println("Erreure en rentrant l'espece!");
       }
      SerialOK += 1; 
    }
  }

  Serial.print("Le reptile est un "); 
  Serial.print(espece);
  Serial.print(" de genre ");
  Serial.print(genre);
  Serial.print(" de ");
  Serial.print(age);
  Serial.print(" ans et pèse ");
  Serial.print(poids);
  Serial.println(" kilo.");

// Caracteristiqures du milieu de vie du reptile
//________________________________________________________________________________________________________
dht.begin();
pinMode(radiateur,OUTPUT);
pinMode(plaque,OUTPUT);
pinMode(brumisateur,OUTPUT);
pinMode(eclairage,OUTPUT);
pinMode(pompe,OUTPUT);
digitalWrite(radiateur,HIGH); 
digitalWrite(plaque,HIGH);
digitalWrite(brumisateur,HIGH);
digitalWrite(eclairage,HIGH);
digitalWrite(pompe,HIGH); 

pinMode(Laser, OUTPUT);
pinMode(Detector, INPUT);
monServomoteur.attach(10);

}

 void loop() {
t = rtc.getTime();
Serial.println(rtc.getTimeStr());
h = dht.readHumidity();
temp = dht.readTemperature();
float hic = dht.computeHeatIndex(temp,h,false);

if (isnan(temp) || isnan(h)) {
  Serial.println("Lecture impossible!");
}
else {
  Serial.print("Température :");
  Serial.println(temp);
  Serial.print("Humidité : ");
  Serial.println(h);
}
delay(5000);

// setting criterias
// 1) Pagona
if(espece == "Pogona Vitticeps") {
  tempMax = 45;
  tempMin = 35;
  tempN = 22;
  humMax = 45;
  humMin = 35;
  lumiere = 12;
  // grillon = 5;
  
//Temperature
  if ((t.hour > 07) && (t.hour < 19)) {       // Day
    if(temp < tempMin) {
      Serial.println(" Temperature : Too cold");
      digitalWrite(plaque,LOW);
    } 
    else {
      Serial.println(" Temperature : All good");
    }
  } 
  else {
    if(temp < tempN) {
      Serial.println(" Temperature : Too cold");
      digitalWrite(plaque,LOW);
    } 
    else {
      Serial.println(" Temperature : All good");
    }
  }
  
//Humidité
  if(h < humMin) {
    Serial.println(" Humidité : Too dry!");
    digitalWrite(brumisateur,LOW);
    digitalWrite(radiateur,HIGH);
  } 
  else if(h > humMax) {
    Serial.println(" Humidité : Too humide!");
    digitalWrite(radiateur,LOW);
    digitalWrite(brumisateur,HIGH);
  } 
  else {
    Serial.println(" Humidité : All good");
    digitalWrite(radiateur,HIGH);
    digitalWrite(brumisateur,HIGH);
  }
  Serial.println(" ");
  Serial.println(" ");
  delay(4000);
}
 
// 2) Cameleon
else if(espece == "Caméléon casque du Yémen") {
  tempMax = 37;
  tempMin = 25;
  tempN = 21;
  humMax = 60;
  humMin = 40;
  lumiere = 12;
  // grillon = 4; every 2 days
  
//Temperature
  if ((t.hour > 07) && (t.hour < 19)) {       // Day
    if(temp < tempMin) {
      Serial.println(" Temperature : Too cold");
      digitalWrite(plaque,LOW);
    } 
    else {
      Serial.println(" Temperature : All good");
    }
  } 
  else {
    if(temp < tempN) {
      Serial.println(" Temperature : Too cold");
      digitalWrite(plaque,LOW);
    } 
    else {
      Serial.println(" Temperature : All good");
    }
  }
  
//Humidité
  if(h < humMin) {
    Serial.println(" Humidité : Too dry!");
    digitalWrite(brumisateur,LOW);
    digitalWrite(radiateur,HIGH);
  } 
  else if(h > humMax) {
    Serial.println(" Humidité : Too humide!");
    digitalWrite(radiateur,LOW);
    digitalWrite(brumisateur,HIGH);
  } 
  else {
    Serial.println(" Humidité : All good");
    digitalWrite(radiateur,HIGH);
    digitalWrite(brumisateur,HIGH);
  }
  Serial.println(" ");
  Serial.println(" ");
  delay(4000);
}

// 3) gecko léopard
else if(espece == "Gecko Léopard") {
  tempMax = 34;
  tempMin = 25;
  tempN = 22;
  humMax = 60;
  humMin = 40;
  lumiere = 12;
  // grillon = 2 tous les jours
  
//Temperature
  if ((t.hour > 07) && (t.hour < 19)) {       // Day
    if(temp < tempMin) {
      Serial.println(" Temperature : Too cold");
      digitalWrite(plaque,LOW);
    } 
    else {
      Serial.println(" Temperature : All good");
    }
  } 
  else {
    if(temp < tempN) {
      Serial.println(" Temperature : Too cold");
      digitalWrite(plaque,LOW);
    } 
    else {
      Serial.println(" Temperature : All good");
    }
  }
  
//Humidité
  if(h < humMin) {
    Serial.println(" Humidité : Too dry!");
    digitalWrite(brumisateur,LOW);
    digitalWrite(radiateur,HIGH);
  } 
  else if(h > humMax) {
    Serial.println(" Humidité : Too humide!");
    digitalWrite(radiateur,LOW);
    digitalWrite(brumisateur,HIGH);
  } 
  else {
    Serial.println(" Humidité : All good");
    digitalWrite(radiateur,HIGH);
    digitalWrite(brumisateur,HIGH);
  }
  Serial.println(" ");
  Serial.println(" ");
  delay(4000);
}

//_________________________________________________________________________________________
//Ne depend de l'espece! Eclairage, eau 
//ECLAIRAGE 
  if ((t.hour > 07) && (t.hour < 19)) {
    digitalWrite(eclairage, LOW);
    Serial.println(" Light on ");
  }
  else {
    digitalWrite(eclairage, HIGH);
    Serial.println(" Light off ");
  }
//POMPE => eau + brumisateur  
  if (((String)rtc.getTimeStr() == "08:00:30")||  ((String)rtc.getTimeStr() == "11:00:00") || ((String)rtc.getTimeStr() == "15:00:00") || ((String)rtc.getTimeStr()=="19:00:00") ) {
    digitalWrite(pompe, LOW);
    Serial.println(" Water on ");
    delay(30000);
  }
  else {
    digitalWrite(pompe, HIGH);
    Serial.println(" Water off ");
  }
//FOOD
  digitalWrite(Laser, HIGH);
  boolean val = digitalRead(Detector);

  if ((t.hour > 07) && (t.hour < 9)) {
    if(val == 1){
      for (int position = 0; position <= 180; position++) {    // partie pas utile maybe dans le futur le premier for
        monServomoteur.write(position);
        delay(15);
      }
      for (int position = 180; position >= 0; position--) {
        monServomoteur.write(position);
        delay(15);
      }
    }
 }
 else if ((t.hour > 11) && (t.hour < 12)) {
    if(val == 1){
      for (int position = 0; position <= 180; position++) {    // partie pas utile maybe dans le futur le premier for
        monServomoteur.write(position);
        delay(15);
      }
      for (int position = 180; position >= 0; position--) {
        monServomoteur.write(position);
        delay(15);
      }
    }
 }
 else if ((t.hour > 18) && (t.hour < 19)) {
    if(val == 1){
      for (int position = 0; position <= 180; position++) {    // partie pas utile maybe dans le futur le premier for
        monServomoteur.write(position);
        delay(15);
      }
      for (int position = 180; position >= 0; position--) {
        monServomoteur.write(position);
        delay(15);
      }
    }
 }
  
delay(1000);
  
}
